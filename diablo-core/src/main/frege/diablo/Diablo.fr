module diablo.Diablo where

import diablo.Util (StringReader)

type Model = [(String, String)]

class TemplateEngine a where
  renderFromString :: a -> String -> Model -> IO String
  renderFromPath   :: a -> String -> Model -> IO String
  renderFromReader :: a -> Reader -> Model -> IO String

{--
    Returns the result of a given template provided by a String
-}
fromString :: (TemplateEngine a) => a -> String -> Model -> IO String
fromString  engine template model = engine.renderFromString template model

{--
    Returns the result of a given template provided by giving a
    class path
-}
fromPath :: (TemplateEngine a) => a -> String -> Model -> IO String
fromPath engine template model = engine.renderFromPath template model

{--
    Returns the result of a given template provided by giving a Reader
-}
fromReader :: (TemplateEngine a) => a -> Reader -> Model -> IO String
fromReader engine template model = engine.renderFromReader template model
